# Geoserver settings
# app-schema.joining = true
# Database connection parameters
cgi.dbtype = postgis
cgi.jndi = java:comp/env/jdbc/cgi-postgres
cgi.host = localhost
cgi.port = 5432
cgi.database = postgis
cgi.user = ows_reader
cgi.passwd = xxxxxx
cgi.schema = wfscookbook
# OGC vocab HTTP-URIs
nil.codespace = http://www.opengis.net/def/nil/OGC/0
nil.unknown = http://www.opengis.net/def/nil/OGC/0/unknown
nil.missing = http://www.opengis.net/def/nil/OGC/0/missing
nil.inapplicable = http://www.opengis.net/def/nil/OGC/0/inapplicable
nil.template = http://www.opengis.net/def/nil/OGC/0/template
nil.withheld = http://www.opengis.net/def/nil/OGC/0/withheld
# Default nil value.
# Uncomment one value
# 'missing' for OGC/CGI
# Use 'unpopulated' for INSPIRE 
nil.default = missing
#nil.default = unpopulated
# Prefix for database column names used for dictionary values
# Uncomment one value
# CGI values use cgi_
# INSPIRE values use insp_
dic.col.prefix = cgi_
#dic.col.prefix = insp_
# URI for eventenviroment category
# Uncomment one of the two values below to choose CGI or INSPIRE value
eventenvironment.uri = http://resource.geosciml.org/classifierscheme/cgi/201012/eventenvironment
#eventenvironment.uri = http://inspire.ec.europa.eu/codelist/EventEnvironmentValue
# Configure Joining support
# This can be necessary in some cases for correct return of nested features
# with app-schema unless you have taken care to order your data carefully
# It is also enables much better performance and so is the preferred option
app-schema.joining = true
